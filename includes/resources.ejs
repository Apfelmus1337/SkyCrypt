    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no">
    <meta property="og:site_name" content="SkyCrypt">
    <meta property="og:type" content="object">
    <link rel="sitemap" href="/sitemap.xml">
    <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:400,500,600,700&display=swap"></noscript>
    <link rel="stylesheet" href="/resources/css/index.css?v127">
    <noscript><link rel="stylesheet" href="/resources/css/inventory.css?v13"></noscript>

    <script>
        const stylesheets = [
            "/resources/css/inventory.css?v13",
            "https://fonts.googleapis.com/css?family=Montserrat:400,500,600,700&display=swap"
        ];

        stylesheets.forEach(function(sheet){
            const link = document.createElement('link')
            link.href = sheet;
            link.rel = 'stylesheet'
            document.head.appendChild(link);
        });
    </script>

    <script>
        let extra = <%- JSON.stringify(extra) %>;

        function formatNumber(number, floor, rounding = 10) {
            let roundFunc = floor ? Math.floor : Math.ceil;
            if (number < 1000)
                return Math.floor(number);
            else if (number < 10000)
                return (roundFunc(number / 1000 * rounding) / rounding).toFixed(rounding.toString().length - 1) + 'K';
            else if (number < 1000000)
                return roundFunc(number / 1000) + 'K';
            else if (number < 1000000000)
                return (roundFunc(number / 1000 / 1000 * rounding) / rounding).toFixed(rounding.toString().length - 1) + 'M';
            else
                return (roundFunc(number / 1000 / 1000 / 1000 * rounding * 10) / (rounding * 10)).toFixed(rounding.toString().length) + 'B';
        }

        document.addEventListener('DOMContentLoaded', function(){
            let searchUser = document.querySelector('#inp_search_user');

            function updateUserTarget(e){
                let playerName = searchUser.value;

                if(window.hasOwnProperty("targetUsername") && playerName)
                    targetUsername.value = playerName;

                if(e.keyCode == 13 && playerName.trim().length > 0)
                    document.location = '/stats/' + playerName;
                else
                    document.querySelector('#btn_search_user').href = '/stats/' + playerName;

                if(playerName.trim().length == 0)
                    document.querySelector('#btn_search_user').href = '#';
            }

            searchUser.addEventListener('keyup', updateUserTarget);
            searchUser.addEventListener('change', updateUserTarget);
        });
    </script>

    <script>
        const themes = {
            "default": {
                name: "Default Theme",
                author: "SkyCrypt Team",
                official: true,
                logo: "https://sky.shiiyu.moe/resources/img/logo_square.png",
                backgrounds: {
                    "bg": {
                        "png": "https://sky.shiiyu.moe/resources/img/bg.png?v3",
                        "webp": "https://sky.shiiyu.moe/resources/img/bg.webp?v3"
                    },
                    "bg_blur": {
                        "png": "https://sky.shiiyu.moe/resources/img/bg_blur.png?v3",
                        "webp": "https://sky.shiiyu.moe/resources/img/bg_blur.webp?v3"
                    }
                },
                colors: {
                    icon: "#0BCA51",
                    line: "#0BDA51",
                    link: "#0BEA51",
                    hover: "#09EF70",
                    maxed: "#DD980E",
                    gold: "#FDBB3C",
                    skillbar: "#0BAA51",
                    maxedbar: "#CE8F12"
                }
            },
            "skylea": {
                name: "Lea's Theme",
                author: "LeaPhant",
                official: true,
                logo: "https://sky.lea.moe/resources/img/logo_square.png",
                backgrounds: {
                    "bg": {
                        "png": "https://sky.lea.moe/resources/img/bg.png",
                        "webp": "https://sky.lea.moe/resources/img/bg.webp"
                    },
                    "bg_blur": {
                        "png": "https://sky.lea.moe/resources/img/bg_blur.png",
                        "webp": "https://sky.lea.moe/resources/img/bg_blur.webp"
                    }
                },
                colors: {
                    icon: "#A6145D",
                    line: "#A6145D",
                    link: "#F94EA3",
                    hover: "#F78DC2",
                    maxed: "#DD980E",
                    gold: "#FDBB3C",
                    skillbar: "#850F4A",
                    maxedbar: "#CE8F12"
                }
            },
            "nightblue": {
                name: "Night Blue Theme",
                author: "8KCoffeeWizard",
                hidden: true,
                logo: "https://i.imgur.com/4SFZGdj.png",
                backgrounds: {
                    "bg": {
                        "png": "https://i.imgur.com/qjsmQ4B.png",
                        "webp": "https://i.imgur.com/qjsmQ4B.png"
                    },
                    "bg_blur": {
                        "png": "https://i.imgur.com/yVqoyvZ.png",
                        "webp": "https://i.imgur.com/yVqoyvZ.png"
                    }
                },
                colors: {
                    icon: "#3BB9FF",
                    line: "#0E8DCA",
                    link: "#00FFFB",
                    hover: "#0BAFCA",
                    skillbar: "#3BB9FF"
                }
            }
        }

        if (!localStorage.getItem('currentTheme') || !themes[localStorage.getItem('currentTheme')])
            localStorage.setItem('currentTheme', 'default');

        if (localStorage.getItem('currentTheme') != 'default')
            loadTheme(localStorage.getItem('currentTheme'));

        function convertHex(code) {
            let hex = code.substring(1, 7);
            return `${parseInt(hex.substring(0, 2), 16)}, ${parseInt(hex.substring(2, 4), 16)}, ${parseInt(hex.substring(4, 6), 16)}`;
        }

        function loadTheme(currentTheme) {
            if (!themes[currentTheme])
                return console.error(`${currentTheme} isn't a valid theme.`);

            let theme = themes[currentTheme];

            let element = document.documentElement;
            let colors = theme.colors;

            for (color in colors) {
                let value = colors[color];

                switch (color) {
                    case 'icon':
                    case 'line':
                    case 'link': 
                        element.style.setProperty(`--${color}-rgb`, convertHex(value));
                    default: 
                        element.style.setProperty(`--${color}-hex`, value);
                }
            }

            let bgs = theme.backgrounds;
            for (bg in bgs) {
                for (img in bgs[bg]) {
                    element.style.setProperty(`--${bg}-${img}`, `url(${bgs[bg][img]})`);
                }
            }

            if (theme.logo)
                element.style.setProperty('--logo-square', `url(${theme.logo})`);

            console.log(`Loaded theme: ${currentTheme}`);
        }
    </script>
